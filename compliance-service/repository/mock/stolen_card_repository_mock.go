// Code generated by MockGen. DO NOT EDIT.
// Source: stolen_card_repository.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStolenCardRepository is a mock of StolenCardRepository interface.
type MockStolenCardRepository struct {
	ctrl     *gomock.Controller
	recorder *MockStolenCardRepositoryMockRecorder
}

// MockStolenCardRepositoryMockRecorder is the mock recorder for MockStolenCardRepository.
type MockStolenCardRepositoryMockRecorder struct {
	mock *MockStolenCardRepository
}

// NewMockStolenCardRepository creates a new mock instance.
func NewMockStolenCardRepository(ctrl *gomock.Controller) *MockStolenCardRepository {
	mock := &MockStolenCardRepository{ctrl: ctrl}
	mock.recorder = &MockStolenCardRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStolenCardRepository) EXPECT() *MockStolenCardRepositoryMockRecorder {
	return m.recorder
}

// IsCardReported mocks base method.
func (m *MockStolenCardRepository) IsCardReported(userID, cardID int64) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsCardReported", userID, cardID)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IsCardReported indicates an expected call of IsCardReported.
func (mr *MockStolenCardRepositoryMockRecorder) IsCardReported(userID, cardID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsCardReported", reflect.TypeOf((*MockStolenCardRepository)(nil).IsCardReported), userID, cardID)
}

// ReportStolenCards mocks base method.
func (m *MockStolenCardRepository) ReportStolenCards(userID int64, cardIDs []int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReportStolenCards", userID, cardIDs)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReportStolenCards indicates an expected call of ReportStolenCards.
func (mr *MockStolenCardRepositoryMockRecorder) ReportStolenCards(userID, cardIDs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReportStolenCards", reflect.TypeOf((*MockStolenCardRepository)(nil).ReportStolenCards), userID, cardIDs)
}
